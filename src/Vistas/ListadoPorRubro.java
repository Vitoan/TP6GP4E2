/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.Categoria;
import Clases.Inventario;
import Clases.Producto;
import static Vistas.Supermercado.Gestion;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class ListadoPorRubro extends javax.swing.JInternalFrame {

private DefaultTableModel modelo = new DefaultTableModel(){
@Override
    public boolean isCellEditable(int f, int c){
        return false;
    }
};
    /**
     * Creates new form ListadoPorRubro
     */
    public ListadoPorRubro() {
        initComponents();
        cargarComboBox();
        armarCabeceraTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbBuscarporRubro = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRubro = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Listado por Rubro");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Rubro:");

        jcbBuscarporRubro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcbBuscarporRubro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbBuscarporRubroActionPerformed(evt);
            }
        });

        tablaRubro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaRubro);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/busqueda(1)(1).png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbBuscarporRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addContainerGap(25, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jcbBuscarporRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbBuscarporRubroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbBuscarporRubroActionPerformed
        filtrar();
        
        
    }//GEN-LAST:event_jcbBuscarporRubroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Categoria> jcbBuscarporRubro;
    private javax.swing.JTable tablaRubro;
    // End of variables declaration//GEN-END:variables
private void cargarComboBox(){
    for(Categoria c: Categoria.values()){
        jcbBuscarporRubro.addItem(c);
    }
}

private void armarCabeceraTabla(){
    modelo.addColumn("Codigo");
    modelo.addColumn("Descripción");
    modelo.addColumn("Precio");
    modelo.addColumn("Stock");
    modelo.addColumn("Rubro");
    tablaRubro.setModel(modelo);
}


private void filtrar(){
    Categoria c = (Categoria)jcbBuscarporRubro.getSelectedItem();
      if (c == null) {
        return; // Si no hay ninguna categoría seleccionada, no hacer nada
    }
    
    // Limpiar la tabla antes de mostrar los productos filtrados
   
    modelo.setRowCount(0);
    for (Producto p : Gestion.getInv()) {
        if(p.getCategoria().equals(c)){
        modelo.addRow(new Object[]{p.getCodigo(),p.getDescripción(),p.getPrecio(),p.getStock(),p.getCategoria()});
        }
    }
}
}
